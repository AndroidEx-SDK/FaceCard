// hat_yaw00_lev0_p16.mh:

#ifndef stasm_hat_yaw00_lev0_p16_mh
#define stasm_hat_yaw00_lev0_p16_mh

namespace stasm {

// tasm -V1 /b/stasm/train/conf/tasm_muct77.conf
// static const int    EYEMOUTH_DIST = 100;
// static const int    FACESCALE = 1
// static const int    PYRSCALE = 1
// static const double SIGMOIDSCALE = 0
// static const double PYR_RATIO = 2;
// static const int    NEGTRAIN_SEED = 2013;
// static const int    HAT_PATCH_WIDTH = 19;
// static const int    HAT_PATCH_WIDTH_ADJ = -6;
// static const int    GRIDHEIGHT = 4;
// static const int    GRIDWIDTH = 5;
// static const int    BINS_PER_HIST = 8;
// static const double WINDOW_SCALE = 0.5;

static double linmod(
    const double* const x,
    const double        intercept,
    const double* const coef,
    const int           n)
{
#if 0                               // unoptimized
    double yhat = intercept;
    for (int i = 0; i < n; i++)
        yhat += coef[i] * x[i];
#else                               // optimized
    double yhat = intercept;
    const int n4 = n - 4;
    int i = 0;
    if(n4 > 0)
    {
        for(; i < n4; i += 4)
            yhat += coef[i]   * x[i]   +
                    coef[i+1] * x[i+1] +
                    coef[i+2] * x[i+2] +
                    coef[i+3] * x[i+3];
    }
    for(; i < n; i++)
        yhat += coef[i] * x[i];
#endif
    return yhat;
}

static double hatfit_yaw00_lev0_p16(const double* const d) // d has 160 elements
{
    const double intercept = -0.453369;
    const double coef[160] =
    {
        0.00372542, 0.0408172, 0.000737811, -0.000469039, 0.0199883, 0.104104, -0.072967, -0.0275536,
        0.0476482, 0.0336855, -0.0625293, 0.0792134, 0.00844284, 0.0468283, 0.0281004, 0.0429594,
        0.0212684, 0.0140295, 0.0240473, -0.0444501, -0.049152, -0.0138905, -0.0490636, 0.0464706,
        0.0380844, 0.0840699, -0.0444403, -0.00255277, 0.0189272, -0.0150143, 0.00990336, 0.140653,
        -0.0174406, 0.00474267, 0.0852838, -0.05192, 0.0539234, -0.0022161, -0.081763, 0.0722966,
        -0.00548851, -0.0938881, 0.0814419, -0.0662686, -0.034123, -0.0718359, 0.0380273, 0.0507774,
        -0.00923894, -0.0135537, -0.0292176, 0.0644432, -0.0330563, -0.0387574, 0.0603047, 0.0415176,
        -0.00796904, -0.0389034, 0.0408463, 0.0205151, 0.0021938, -0.0184184, 0.037596, -0.0300464,
        -0.0635431, -0.0548118, 0.0293951, -0.0222044, 0.0166339, 0.025922, 0.010845, -0.11305,
        0.0452315, 0.0574284, -0.00512447, 0.0343274, 0.000738636, 0.0617322, -0.00445308, -0.0830076,
        -0.0238772, 0.0369547, -0.0520601, 0.00859127, -0.030047, 0.0840427, 0.0609438, -0.0344356,
        0.0696376, -0.0160002, 0.0450477, 0.0209688, 0.013092, 0.0779064, 0.0238193, 0.0204056,
        -0.0355255, 0.0530715, 0.0188183, -0.0320216, -0.020793, 0.000797391, -0.00462265, -0.00987595,
        0.0478896, 0.0397222, 0.0361005, 0.0190977, 0.0395541, -0.00440083, -0.0321619, 0.0214029,
        -0.114959, -0.0563459, 0.0130055, -0.0112418, 0.0355367, -0.0397584, 0.135856, 0.145345,
        -0.0185943, -0.0725598, 0.0794152, 0.015131, 0.0323186, 0.0151301, -0.0107669, 0.0614654,
        0.0280355, -0.0114101, -0.00805179, -0.00991979, 0.0205382, -0.056034, -0.0430887, -0.0824119,
        -0.0260952, -0.0149136, -0.0502353, -0.00269792, 0.014834, 0.0114513, 0.0327027, 0.0182124,
        -0.0395778, 0.00702357, -0.0422405, 0.0382446, -0.0188065, 0.0273028, -0.055736, 0.0248173,
        0.0623721, 0.0660628, 0.0572871, -0.0611501, -0.0541477, 0.0390754, -0.0566607, -0.00659149
    };
    return linmod(d, intercept, coef, NELEMS(coef));
}

static const HatDescMod hat_yaw00_lev0_p16(hatfit_yaw00_lev0_p16);

} // namespace stasm
#endif // stasm_hat_yaw00_lev0_p16_mh
